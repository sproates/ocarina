%{#include <iostream>#include <string>#include "lexer.h"%}%union {  double real;  int32_t integer;  std::string *identifier;}%token <real> TOKEN_REAL%token <integer> TOKEN_INTEGER%token <identifier> TOKEN_IDENTIFIER%start program%require "2.4.2"%skeleton "lalr1.cc"%defines%name-prefix="ocarina"%define "parser_class_name" "parser"%debug%error-verbose%%program : statements {  std::cout << "Entered program" << std::endl;};statements : statement {  std::cout << "Statement" << std::endl;}           | statements statement {  std::cout << "Statements" << std::endl;};statement : TOKEN_REAL | TOKEN_INTEGER | TOKEN_IDENTIFIER;%%namespace ocarina {  parser::parser() {    std::cout << "ocarina::parser::parser()" << std::endl;  }}